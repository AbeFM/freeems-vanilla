Change Log for the firmware code. Newest version at top, newest changes at the bottom of each.

Please add your name, and a time/date WITH time zone info before every line.

0.0.19 () <time> // - UK Time
Fred 25/12  3:30pm:	Modified writeBlock to burn small blocks via buffer
					Added validation to flash burn direct function
					Added upper range to small table validation check
					Added test packets for small chunk write/burn
					Wrapped braces around protocol case blocks
Fred 26/12 12:26pm:	Added addresses for all the small table stuff
					Fixed buffer address creation code by casting
					Finished validation call blocks off
					Added return to block lookup for when ID not found
					Added more test packets for small chunk write/burn
Fred 26/12  9:41pm:	Removed stale comments from flashWrite.c
					Filled out file names in comments and header defs for decode
					Updated some TODO entries etc in preparation for the weekends work
					

0.0.18 (JackTheRipper) 10:40pm 22/12/08 - UK Time
Fred 12/11  7:04am:	Added flash and ram receive functions
					Added wrappers for debug and error
					Modified flash error handling to be compatible with overall scheme
					Renamed all counters more sensibly
					Major tidy up of init.c - more to do in the future
Fred 12/11  7:51pm:	Created generic flash burning wrapper
					Moved flash error handling into wrapper
					Moved page ram init to functions per block of data
					Moved tables to 3 pages from 2 and put functions in place to init them
					Created multi sector flash burn function
					Previously added table size guide
					Previously added testing matrix for comms
					Previously added hardware interface doc
Fred 13/11  8:52am:	Fixed bug where config was coming from flash, not ram.
					Completed paging memory exercise for now
					Removed all linker warnings by shuffling code and data
Fred 14/11  7:45am:	Split regions into regions.x out of the main linker script
					Split page for small tables into chunks to cause link issues if oversize and still work if undersize
Fred 16/11  5:05pm:	Fixed hard reset functionality
					Refactored the table lookup to be faster and use less space
					Updated serial core docs
					Added doc describing the datalog format
					More comms test packets
					Pin out doc update!
Fred 18/11  6:04pm:	Fixed missing text1 copy options
					Changed makefile to be faster and more versatile
					Migrated rodata back to its own section(s)
					Moved ADC tables and core var gen to a paged flash region together
Fred 19/11  8:30am:	Migrated data init to static from dynamic
					Fixed comms dictionary lookup addresses with lookup addr init function
Fred 19/11  5:55pm:	Moved all ISR code to text1 so we know how big it is and how big the rest is
Fred 20/11  7:55am:	Added check for packet from own address
					Changed error codes to be more meaningful
Fred 20/11  6:37pm:	Added interface data map
Fred 21/11  8:27pm:	Added windows Makefile
					Added size utility call
					Added example datalog json
					Merged lambda and ve into fuel files
Fred 22/11  2:27pm:	Split fixed config in two different pieces
					Rearranged makefile
					Split fixed configs into two different files
					Added extra user text field and filled out to section boundary
					Moved some functions back into the text areas
					Added interface packet descriptions
					Fixed init values
					Split headers out a bit
					Fixed and added some comments etc
					Added win make file generator
					Tweaked makefile to work with windows
Fred 25/11 11:37pm:	Added test packets to dump registers with SM
					Added memory management documentation
					Added example settings file
					Added tuner interface overview doc
					Further updated pin out doc
Fred 26/11 11:12pm:	Added Sean's flash fixes in and looped flash erase/burn to test it
					More changes to the json stuff
					Fixed bug with makefile that caused it to regen files without need
Fred 27/11  6:31pm:	Added custom packet definition file for tuner
					Added windows makefile generation to the makefile
					Optimised flash writing by moving page swapping up one level
					Removed cruft from comms core
					Relocated dictionary to paged flash
Fred 29/11  7:20pm:	Added axis and cell value adjustment routines for the main tables
					Added axis adjustment error checking function
					Rearranged error codes a bit
					Added test data block for testing serial comms
Fred 30/11 10:19am:	Removed redundant code from serial comms
					Added basic datalog function and serial option
					Updated readme file
					Rearranged and renamed some doc files and interface descriptors
Fred 30/11  8:04pm:	Added async datalog sender
					Added configurator for async logging
					Added all minor parts of the dynamic config to the dictionary
					Divided page f9 into data and functions
					Added two d us table adjuster functions and serial routines
Fred  1/12 10:22pm:	Fixed serial bug with small hack (needs better fix)
					Moved many functions to paged flash
					Fixed copy paste error in address init code
					Fixed - instead of + in cell setting function
Fred  7/12 10:41pm:	Added data map overview doc					
Fred 11/12 12:31am:	Added JSONSchema for one JSON file
Fred 18/12  6:29pm: Refactored array based banking to pointer based - Awesome change
					Fixed pointer to a pointer bug in datalog introduced above
					Removed extra copies of core and derived vars from header
					Documented new pointer scheme in header
Fred 21/12  2:37am:	Fixed bug, flash and ram pages/addresses were swapped in a flash burn function call
					Added check for dest address in ram region
Fred 21/12 10:46pm:	Hacked in datalog delay of 1 second
					Hacked orange button to turn basic datalog off and on
					Added comments for future changes to serial stuff
					Added ifdef wrappers around unrequired init stuff
Fred 22/12  8:46pm:	Split address lookup function out of comms file
					Added more comments etc
					Moved old bugs to mantis and removed bugs.txt
					Cleaned out HEAPS of old cruft, tidied up and commented stuff

0.0.17 (SpudEchoes) 12:17 am 10/11/08 - UK time
Fred  8/10  7:40am: Moved flash routine from old text1 to text
                    Added descriptive comment to the main table definition
                    Added sizeof defines to the structs file
                    Shrunk and renamed text1 to lookup with 3 2k tables in it
Fred 15/10 10:50am: Removed all old busy wait ascii serial code
					Added packetising escaping checksumming receive ISR code
					Added packetising escaping checksumming send ISR code
					Added code to send back whatever it receives for testing purposes
					Temporarily changed make file to avoid a couple of options an old version of gcc didn't have
					Added document describing serial implementation
Fred 20/10 10:56am:	Added serial specification docs to the project docs dir and renamed them
					Added test packet directory
					Made some fixes to the ISR handling code for serial
					Added some more serial counters and masks
Fred 20/10  8:11pm:	Added core comms source and header files
					Removed commented out legacy code in places
					Updated tasks, bugs, tests, mindmap
Fred 21/10  8:00am:	Refactored escape code in rx section
					Added test packet for escape code generation EMS side
Fred 21/10  9:50pm:	Updated serial impl document
					Reordered receive statements for better speed and accuracy
					Generated individual bytes for sending
Fred 22/10  6:55pm:	Made the serial packet handler compile
					Commented out the copy-only sections in makefile
					Moved things out of commsISRs.h and added more things to commsCore.h
Fred 22/10  9:30pm:	Updated release procedure to include internal version changes to prevent incorrect ones recurring
					Removed burnbuf as unrequired now
					Bumped the versions in the constants file.
Fred 23/10  1:54am:	Completed and tested serial checksum and escape functionality.
Fred 23/10 11:54pm:	Added substantial packet handling logic.
Fred 25/10  3:00pm:	Fixed array length mismatch
					Added header decoding logic
					Refactored serial headers to be more sensible and share vars
					Removed instances of using "&= ~0x" from the code
					Renamed various serial variables
Fred 25/10  9:49pm:	Added line count of s19 to makefile
Fred 26/10 00:19am:	Added interface version request/response code
Fred 26/10  6:47pm:	Added firmware version request/response code
					Added max packet size request/response code
					Added echo wrapper packet request/response code
					Added hard reset request and action code (using real vector location)
					Added async error code packets
					Added async debug packets
					Added stringCopy utility to avoid using another library
					Added call to writeAlignedBlock function
Sean 29/10 11:30pm:	Fixed flashWrite.c mistakes
Fred 31/10  6:00pm:	Fixed issue number 4 by changing linker script with AT() clause
					Moved output dirs to lowercase and shorter names
					Moved some functions to fixedconf flash blocks temporarily
					Reclaimed 16 bytes of space with a mem.x fix
Fred 03/11 00:48am:	Made a number of fixes to the serial comms code to be detailed in later change log
Fred 04/11  7:25pm:	Migrated memory management to paged style upto 128k of space in one flash block.
Fred 07/11  1:23pm:	Added flash block return by ID function
Fred 08/11  1:38pm:	Added soft reset function
Fred 09/11	2:37am:	Added ram block return by ID function
					Added ram to flash burn by ID function
					Added comm to ram write by ID function
					Added comm to flash write by ID function (and update ram)
Fred 09/11 12:30pm:	Added memory location lookup and struct
Fred 09/11  5:29pm:	Removed bigtables linear page stuff
Fred 10/11  8:16am:	Added validation function for main tables
					Added limits to table return functions
					Fixed bug when address not ours dropping packet
Fred 10/11 11:26pm:	Added debug and error packets back in
					Merged Seans fixes for flash in

0.0.16 (FlashGordon) 11:12am 6/10/08 - NZ time
Fred: Removed reference to TX0 pin S1 from portHISR()
Fred: Used fuel pump pin for portHISR() indicator
Fred: Removed flow control pin function from pin out definition
Fred: Added tachometer function to pin out definition
Fred: Moved User LED flash to RTC to free MDC ISR for Tacho use
Fred: Fixed Makefile dumps section
Fred: Added configurable tacho output
Fred: Fixed RPM calc to use correct variable scale
Fred: Fixed scheduler to always sample ADCs
Fred: Made baud configurable (default 115200)
Fred: Added more runtimes to struct and code to populate them
Fred: Added latencies struct and code to populate them
Fred: Changed broken sync code to be more simple
Fred: Refactored sleep function to allow more range 
Fred: Added micro second sleep function 
Fred: Moved reset variables to a function
Fred: Added flash globals temporary file
Fred: Added dwell spread sheet
Fred: Added injector dead time spread sheet
Fred: Added tables for IDT and dwell vs voltage
Fred: Added table lookup for unsigned short 2d 16 long
Fred: Added overflow check for reference PW
Fred: Changed table functions to return values directly
Fred: Removed duplicate MAT storage call
Fred: Moved flag clear for RTI to front
Fred: Reduced Ram to 6k to allow 2k of minor data and 4k window of big tables
Fred: Reduced Ram to 5k to allow 1k of flash burn buffer 2k of minor data and 4k window of big tables
Fred: Added more MAP sensor and other definitions to the globalDefines file
Fred: Modified Makefile to compile hand written assembly with C cleanly
Fred: Renamed stoichOct to stoichAFROct
Fred: Updated IAT and CHT tables to use correct bias resistor value of 2.7k
Fred: Reformatted pinout doc and added two columns for bootload and reset states
Fred: Moved ADC pins to final locations on bank 0
Fred: Merged in Seans Flash changes :
Sean: Added flash related header and source files
Sean: Added assembly to load code to stack for burning own flash
Sean: Added flash erase function
Sean: Added flash word write function
Sean: Added flash write aligned block function
Sean: Documented flash functionality in the code
Fred: Added output to makefile to see each operation type
Fred: Removed #define from all constants C files
Fred: Added main table unions
Fred: Added ram regions for the purpose of aligning large blocks of data
Fred: Added include and memcpy references to bring data up into ram
Fred: Added RPAGE to header to allow paging of tables in and out of visible space
Fred: Added paged tuning blocks such that table switching almost changes a full tune
Fred: Migrated small tables into struct for paging
Fred: Split flash into 5 blocks to ensure no overflow occurs in smalltables
Fred: Created mechanism to ensure paged data is retrieved correctly by implementing basis of table switching
Fred: Moved all references to tables to ram copies
Fred: Split flash again for fixed config block.
Fred: General formatting and file name and content changes
Fred: Shifted tunable configs to structs for paging
Fred: Moved copy from flash to ram to start of init
Fred: Future comms pseudo code added
Fred: Various spelling fixes

0.0.15 (Avogadro) 10/7/08
Moved injector.c inc file into inc
Added main running variables struct
Added input handling code for all main vars
Renamed all clock counters clock instead of counter
Added counter for calcs routine
Added struct for counters
Added struct for clocks
Added struct for runtimes
Added flash .c and .h files
Added derived vars struct
Added lookup .c and .h files
Added VE tables and Advance tables
Reformated structs to use typedef statement
Added error codes define file
Added config defaults file
Split remaining settings out into structs.h file
Moved documentation about structs to structs file
Removed contents of initConfiguration()
Moved tuning tables and lookup tables and configuration to the other primary flash block.
Added table lookup routine for X by Y unsigned short main tables
Changed main table structure to be more suitable for variable sizing
Added config checker that outputs a count of misconfigurations
Added send function for string without length relying on null byte to terminate
Added send function for block of data from memory with address and length
Fixed the ignition out pins in the pin out doc
Added the hardware flow control pin to PE7 in the pin out doc
Added full length equation with divisors and scaling
Sorted out the memory management up to 48k
Setup the paged macros for data and functions
Moved some vars to globals calculated at boot time to save loop time
Moved user string to config block
Added 16x2xunsigned short table struct
Added MAF input to the pin out doc
Added MAF transfer lookup table
Added correct and physics based mathematics code and calcs
Relocated rodata into text for loading convenience
Added text2 region temporarily (page window)
Added dependency on makefile and linker stuff to make file
Added relocation of flash block lma addresses to make file
Added realistic data to the MAF lookup table
Added a couple of basic hard coded scripts for memory analysis
Added dumps of each object file
Refactored IO banking system and documented it
Changed timer extension use code to use union for performance
Split core vars generation out into own function
Split derived vars generation out into own function
Added some structure for corrections to PW
Swapped order of CRLF pair to be correct in HR log function
Rearranged main.c code for better effect
Slowed logging down to 10x per second
Increased verbosity of log
Added reset rpm to zero if non synchronously sampling ADCs
Split Lambda table out from VETables.c so it can be arranged in memory more conveniently
Split config into tunable and fixed
Moved many literals to #defines
Fixed "out by 100" error on load indices in tables
Moved rough RPM calc to per event rather than per rev and inited cycleTime to longmax
Reincluded the broken ignition code
General tidy up of all files

0.0.14 (entropy) 24/6/08
Added FreeTherm generated transfer table for IAT
Added FreeTherm generated transfer table for CHT
Added code to obtain MAP from a min range pair
Added code to obtain EGO from a min range pair
Added code to obtain TPS from an ADC min/max/range and max set of data
Changed logging code to be more readable and compact
Changed SCI block to use a base address
Added configuration and header for the second block of ADC inputs
Added code to sample the second block
Changed ADC blocks to use base address
Added AAP variable and calculation
Added BRV variable and calculation
Changed 3 ints to 3 unsigned chars in utils.c
Factored out ADC sampling to two methods in different ways
Fixed poor header structure (again) (might have it right this time)
Removed unrequired void from init() definition.
Added ADC reading counters
Renamed ADC reading timeout counter
CamelCased all files except linker scripts
Factored out hr serial logging
Moved pwm demo to utils.c
Measured time of ADC reading functions at less than 1us each, and removed non loop implementation
Used #define to ensure extern keyword applied appropriately
Fixed makefile dependencies to only recompile sources that are changed
Fix makefile paths for execution from explicit to user based
Changed makefile to chain execution such that each stage is done only once
Added output dir to keep clutter down
Added backup of .s19 to makefile
Added extern #define structure to all headers
Split oversized freeems.h down to managable chunks
Moved s19 storage to own directory
Introduced dependency on all headers for all source files (previously rebuilding ALL files EVERY time)

0.0.13 (googoogaga) 12/6/08
Added more comments
Added basic logging of interesting vars using serial
Added serial send unsigned char,short,long
Added itoa() functions for char,short,long
Added serial send string
Added header section for SCI0
Started adding serial setup stuff
Fixed baud config const
Added comments about structure to scheduler
Fixed issue with loops in ign sched
Remove unused bit bang demo function
Add trial send call to main loop
Added duplicate SCI0 section to header with base to use later
Added interface, version, and user strings and definitions

0.0.12 (bastard) 4/5/08
Fixed bug 5 : forgot to add code run time to test for injector hard on behaviour!
Added tooth counters for displaying tooth timing patterns in conjunction with last tooth time stamps at low RPM
Added configurable tooth polarity to rpm/engine position inputs
Fixed a mistake in the code that allowed a ~0x10 to occur (wasn't causing a problem in this instance)
Added PIT based queued ignition functionality which kinda sorta works

0.0.11 (cookin') - 27/3/08
Added freemind mind map of FreeEMS code layout/structure
Removed legacy code snippets.c
Found and fixed bug where the period time was being used before it was valid
Found and fixed a bug where injector timing was not functioning correctly
Found and fixed a bug whereby overlapping injection working correctly relied on an accurate period of a future cycle
Added more realistic sync loss in several places
Changed some variable names etc

0.0.10 (squashed) - 23/3/08
Fixed bug 1 : array index out of bounds corruption in scheduler.
Added code to limit retard/advance of fueling, untested, may not be working correctly.
Added modulus down counter interrupt to flash "user led" to indicate board is functioning.
Fixed banked in and out calcs system

0.0.9 (exponent) - 22/3/08
Refined injector control further
Implemented RTC in RTI for 1/8 milli, milli, tenths of, seconds, minutes each with 65535 max
Removed 6x duplication in injection_isrs.c by splitting to injector_isr.c and using defines and imports.
Added support for individual fuel pulse widths
Added latency adjustments and recording to minimum pulse width
Added code run time recording for each channel
Updated docs for injection algorithm
Added LVI interrupt logging to record low voltage conditions.
Added ADC sampling and flagging code
Heavily revised all fuel code to use arrays instead of defines.
Removed 6x duplication in the scheduler code
Tidied up MANY comments and code blocks a LOT

0.0.8 (glen) - 9/3/08
Added code and constants to watch pulsewidth vs. min and max and act appropriately
Split constants out to separate files
Managed to make overlapping injection work with "Plan B"
Recording time between odd second triggers in 32 bits using timer overflow technique

0.0.7 - 6/3/08
Moved pins for ignition around
Changed obsolete code in main.c with idea inspired by Alex
Tidied and removed some TODOs
Added port A and B access together for ignition output (registers are conveniently next to each other for word access)
Moved PWM experimentation to a function and init.c
Shifted all macros for main injectors to freeems.h for use in (at least) two source files
Rearranged and changed all global variables
Added new status and settings bitwise variables
Implemented very basic NipponDenso decoder that I would not trust to do much at all.

0.0.6 - 3/3/08
Setup Timer interrupts and mimicked the JimStim input signal on port J 6,7
Fixed init bug (hadn't done it at all yet) that only sampled ADC 0 - 3
Added reset of port B so it can be used for numerical display of debug info
Added wheel analysis document
Made MakeFile dump pre-processed C
Fixed up all header structure
Split interrupt vector table out of main
Added timer overflow handler and extension variable
Moved all injector code to Timer ISR's
Attempted some basic math in the main RPM input ISR and failed

0.0.5 - 26/2/08
Added RTI code to cycle the "user led" at 1Hz (Many thanks to Karsten for pointing out my mistake)
Added port H input interrupt code with basic debounce and variables to control what is switched and when
Fixed a small bug in the logic for cylinder count etc
Rearranged significant portions of the code
Added these release notes

0.0.4 - 
Added dual ADC input to speed controller
Added variables for configuration of cylinder count etc etc
Added one pulse per event tacho style pulse
Added PWM code that cycles its period and duty semi randomly

0.0.3 - 
(0.0.2plus) Added strobing port P channels as well as Port T channels
(0.0.2++) Added strobing of pairs of port A and B channels
Added broken logic to strobe more LED's in 5 different ways based on some variables

0.0.2 - 19/2/08
Added ADC input for controlling sleep period

0.0.1 - 18/2/08
Initial version feature list :
Sleep function
User LED toggled once per main loop iteration
6 primary fuel outputs strobed through in a sequential fashion
